<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <style>
            .roads {
                fill: none;
                stroke-linejoin: round;
                stroke-linecap: round;
            }
            .major-highway { 
                fill: none;
                stroke-width: .02em;
                stroke: #336699; 
                stroke-opacity:.4;
            }
            .secondary-highway { stroke: #737373; }
            .road { stroke: #bdbdbd; }
            .beltway { stroke: #737373; stroke-width: 13.5px;}
            .ferry-route { stroke: #4393c3; stroke-width: 1.5px; }

        </style>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
	    <script src="https://d3js.org/d3.v4.min.js"></script>
	    <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
	    <script src="https://d3js.org/topojson.v2.min.js"></script>	
    </head>
    <body>
        <svg width="960" height="600" xmlns="http://www.w3.org/2000/svg" xmlns:x="http://www.w3.org/1999/xlink">
        <defs>
            <symbol id="p1">
                <svg preserveAspectRatio="" width="20px" height="12px" viewBox="0 0 1200 1200">
                    <g transform="matrix(0.9983361,0,0,0.9983377,0.4991681,0.4986858)" style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1">
                        <path style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" d="M 80.75293,0 C 115.42871,10.583496 152.23779,16.276856 190.37695,16.276856 C 228.51563,16.276856 265.32422,10.583496 300,0.0004883 C 334.67578,10.583496 371.48438,16.276856 409.62305,16.276856 C 447.76172,16.276856 484.57129,10.583496 519.24707,0 C 569.8125,63.908203 600,144.67822 600,232.5 C 600,413.92383 471.16992,565.25391 300,599.99902 C 128.83008,565.25391 0,413.92383 0,232.5 C 0,144.67822 30.187988,63.907715 80.75293,0 z " />
                        <path style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" d="M 80.75293,0 C 115.42871,10.583496 152.23779,16.276856 190.37695,16.276856 C 228.51563,16.276856 265.32422,10.583496 300,0.0004883 C 334.67578,10.583496 371.48438,16.276856 409.62305,16.276856 C 447.76172,16.276856 484.57129,10.583496 519.24707,0 C 569.8125,63.908203 600,144.67822 600,232.5 C 600,413.92383 471.16992,565.25391 300,599.99902 C 128.83008,565.25391 0,413.92383 0,232.5 C 0,144.67822 30.187988,63.907715 80.75293,0 z " />
                    </g>
                    <g style="fill:#003f87;fill-opacity:1;stroke:none;stroke-opacity:1" transform="matrix(1.0070935,0,0,1.0102847,-2.1280324,-3.66885)">
                        <path style="fill:#003f87;fill-opacity:1;stroke:none;stroke-opacity:1" d="M 15,232.5 C 15,200.521 19.169434,169.51611 26.994629,139.99902 L 573.00586,139.99902 C 580.83008,169.51611 585,200.521 585,232.5 C 585,405.60547 462.82617,550.17188 300,584.67676 C 137.17432,550.17188 15,405.60547 15,232.5 z " />
                    </g>
                    <g style="fill:#af1e2d;fill-opacity:1;stroke:none;stroke-opacity:1" transform="matrix(1.0125461,0,0,1.0271486,-3.7638021,-3.1017481)">
                        <path style="fill:#af1e2d;fill-opacity:1;stroke:none;stroke-opacity:1" d="M 31.324219,124.99902 C 43.579102,85.77832 62.362793,49.44043 86.402832,17.259766 C 119.50439,26.392578 154.37061,31.272461 190.37695,31.272461 C 228.4375,31.272461 265.22461,25.820801 300,15.654785 C 334.77539,25.820801 371.5625,31.272461 409.62305,31.272461 C 445.62891,31.272461 480.49609,26.392578 513.59766,17.259766 C 537.63672,49.44043 556.4209,85.77832 568.67578,124.99902 L 31.324219,124.99902 L 31.324219,124.99902 z " />
                        <text x="320" y="390" font-family="monospace" font-weight="900" text-anchor="middle"></text>
                    </g>
                    <path style="font-size:93.21589661px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;text-anchor:middle;fill:#ffffff;fill-opacity:1;font-family:Roadgeek 2005 Series C" d="M 108.86859,112.81165 L 108.86859,50.416161 L 117.60967,50.416161 L 117.60967,112.81165 L 108.86859,112.81165 z M 159.56965,112.81165 L 140.31942,70.997717 L 140.31942,112.81165 L 131.39104,112.81165 L 131.39104,50.416161 L 140.31942,50.416161 L 157.42977,87.853449 L 157.42977,50.416161 L 166.35816,50.416161 L 166.35816,112.81165 L 159.56965,112.81165 z M 195.41654,58.706192 L 195.41654,112.81165 L 186.39735,112.81165 L 186.39735,58.706192 L 175.05098,58.706192 L 175.05098,50.416161 L 206.7629,50.416161 L 206.7629,58.706192 L 195.41654,58.706192 z M 215.30532,112.81165 L 215.30532,50.416161 L 244.59927,50.416161 L 244.59927,59.172274 L 224.2337,59.172274 L 224.2337,74.908269 L 237.16084,74.908269 L 237.16084,83.476812 L 224.2337,83.476812 L 224.2337,104.05837 L 247.01726,104.05837 L 247.01726,112.81165 L 215.30532,112.81165 z M 283.20473,112.81165 L 274.92624,83.476812 L 266.37247,83.476812 L 266.37247,112.81165 L 257.4441,112.81165 L 257.4441,50.416161 L 276.04442,50.416161 C 278.46238,50.416224 280.67885,50.819784 282.69389,51.62684 C 284.70884,52.434021 286.44475,53.551862 287.90163,54.980368 C 289.35844,56.408988 290.47425,58.162956 291.24907,60.242276 C 292.02379,62.321703 292.41119,64.60333 292.41123,67.087165 C 292.41119,70.812085 291.66716,73.978511 290.17914,76.586455 C 288.69102,79.19447 286.45894,81.056433 283.48285,82.172347 L 292.41123,112.81165 L 283.20473,112.81165 z M 283.67015,67.087165 C 283.67012,64.665853 282.92609,62.741367 281.43805,61.313699 C 279.94996,59.886136 277.99694,59.172328 275.579,59.172274 L 266.37247,59.172274 L 266.37247,74.908269 L 275.579,74.908269 C 278.18236,74.908307 280.18173,74.240918 281.57712,72.906101 C 282.97244,71.571363 283.67012,69.631721 283.67015,67.087165 L 283.67015,67.087165 z M 334.5642,95.768339 C 334.56416,98.31476 334.11481,100.6897 333.21614,102.89316 C 332.31739,105.09665 331.07766,107.00549 329.49693,108.61973 C 327.91613,110.23398 326.08704,111.52233 324.00964,112.48482 C 321.93219,113.4473 319.68449,113.92853 317.26652,113.92853 C 314.53824,113.92853 312.08951,113.40088 309.92033,112.34556 C 307.75114,111.29024 305.92252,109.86263 304.43447,108.0627 C 302.9464,106.26279 301.79937,104.18295 300.99337,101.82315 C 300.18737,99.463388 299.78437,97.011244 299.78438,94.466716 L 308.52546,94.466716 C 308.52544,95.770251 308.69573,97.058136 309.0363,98.330376 C 309.37684,99.602646 309.90376,100.75127 310.61707,101.77627 C 311.33035,102.80129 312.22952,103.62404 313.3146,104.24452 C 314.39964,104.86503 315.71694,105.17527 317.26652,105.17526 C 318.44523,105.17527 319.57711,104.92707 320.66221,104.43067 C 321.74724,103.93429 322.67716,103.25127 323.45197,102.38161 C 324.22672,101.51197 324.84634,100.50307 325.31087,99.354907 C 325.77533,98.206766 326.00757,97.011244 326.0076,95.768339 C 326.00757,93.968443 325.63579,92.37031 324.89226,90.973934 C 324.14867,89.577602 322.84697,88.165144 320.98716,86.736554 C 320.67685,86.425859 320.55292,86.254867 320.61538,86.223579 C 320.6778,86.192343 320.49191,86.021825 320.05771,85.712023 C 319.62347,85.402277 318.70868,84.796937 317.31335,83.896004 C 315.91798,82.995129 313.63953,81.459044 310.478,79.287747 C 307.93703,77.548497 306.03083,75.514594 304.75942,73.186035 C 303.48797,70.857556 302.85226,68.296942 302.85226,65.504186 C 302.85226,63.268552 303.25526,61.173074 304.06128,59.217745 C 304.86725,57.262525 305.99866,55.539819 307.45551,54.049621 C 308.91235,52.559541 310.60192,51.395283 312.52421,50.556838 C 314.44647,49.71852 316.52295,49.29933 318.75365,49.299267 C 320.98618,49.29933 323.04799,49.70289 324.93908,50.509945 C 326.83013,51.317127 328.47286,52.434967 329.86729,53.863473 C 331.26166,55.292095 332.37747,56.999643 333.21474,58.986126 C 334.0519,60.972715 334.50173,63.1454 334.5642,65.504186 L 326.0076,65.504186 C 325.88459,63.331075 325.14102,61.592738 323.77692,60.289169 C 322.41275,58.985705 320.73833,58.333948 318.75365,58.333894 C 316.70836,58.333948 314.97291,59.016967 313.54731,60.382954 C 312.12167,61.749046 311.40886,63.456122 311.40887,65.504186 C 311.40886,67.055948 311.81186,68.359465 312.61787,69.414739 C 313.42384,70.4701 314.97339,71.649518 317.26652,72.952995 C 323.28119,76.429707 327.6678,79.968432 330.42638,83.569177 C 333.1849,87.16998 334.56416,91.236364 334.5642,95.768339 L 334.5642,95.768339 z M 360.52064,58.706192 L 360.52064,112.81165 L 351.50144,112.81165 L 351.50144,58.706192 L 340.15508,58.706192 L 340.15508,50.416161 L 371.867,50.416161 L 371.867,58.706192 L 360.52064,58.706192 z M 406.44816,112.81165 L 402.07763,95.768339 L 388.68506,95.768339 L 384.59548,112.81165 L 375.57345,112.81165 L 391.10305,50.416161 L 399.84695,50.416161 L 415.37654,112.81165 L 406.44816,112.81165 z M 395.2891,69.042441 L 390.91856,87.015068 L 399.84695,87.015068 L 395.2891,69.042441 z M 439.53084,58.706192 L 439.53084,112.81165 L 430.51165,112.81165 L 430.51165,58.706192 L 419.16529,58.706192 L 419.16529,50.416161 L 450.87721,50.416161 L 450.87721,58.706192 L 439.53084,58.706192 z M 459.41964,112.81165 L 459.41964,50.416161 L 488.71358,50.416161 L 488.71358,59.172274 L 468.34802,59.172274 L 468.34802,74.908269 L 481.27515,74.908269 L 481.27515,83.476812 L 468.34802,83.476812 L 468.34802,104.05837 L 491.13157,104.05837 L 491.13157,112.81165 L 459.41964,112.81165 z "/>
                </svg>
            </symbol>
            <symbol id="p2">
                <svg width="10" height="6" viewBox="0 0 601 601" xml:space="preserve" style="overflow:visible">
                    <metadata id="metadata30">
                    <rdf:RDF><cc:Work rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata>
                    <g transform="matrix(1.5625,0,0,1.5625,0.49999999,0.49999999)" style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none">
                        <path d="M 192,0.003418 C 177.13184,14.054688 157.07227,22.669922 135,22.669922 112.92676,22.669922 92.868164,14.052246 78,0 L 0,80.771484 c 19.416016,14.393067 32,37.479006 32,63.504396 0,16.48779 -5.051758,31.79736 -13.69043,44.46289 C 6.793457,205.58789 0,226.05078 0,248 c 0,57.78711 46.680176,104.66992 104.39063,104.99805 33.27783,0 63.58496,11.61132 87.60937,31.00195 24.02344,-19.39063 54.33105,-31.00195 87.60937,-31.00195 C 337.31934,352.66992 384,305.78711 384,248 384,226.05078 377.20605,205.58789 365.69043,188.73877 357.05176,176.07324 352,160.76367 352,144.27588 352,118.25049 364.58398,95.164551 384,80.771484 L 306,0 c -14.86816,14.052246 -34.92676,22.669922 -57,22.669922 -22.07227,0 -42.13184,-8.615234 -57,-22.666504 z" style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
                        <path d="M 192,0.003418 C 177.13184,14.054688 157.07227,22.669922 135,22.669922 112.92676,22.669922 92.868164,14.052246 78,0 L 0,80.771484 c 19.416016,14.393067 32,37.479006 32,63.504396 0,16.48779 -5.051758,31.79736 -13.69043,44.46289 C 6.793457,205.58789 0,226.05078 0,248 c 0,57.78711 46.680176,104.66992 104.39063,104.99805 33.27783,0 63.58496,11.61132 87.60937,31.00195 24.02344,-19.39063 54.33105,-31.00195 87.60937,-31.00195 C 337.31934,352.66992 384,305.78711 384,248 384,226.05078 377.20605,205.58789 365.69043,188.73877 357.05176,176.07324 352,160.76367 352,144.27588 352,118.25049 364.58398,95.164551 384,80.771484 L 306,0 c -14.86816,14.052246 -34.92676,22.669922 -57,22.669922 -22.07227,0 -42.13184,-8.615234 -57,-22.666504 z" style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
                    </g>
                    <g transform="matrix(1.5625,0,0,1.5625,0.49999999,0.49999999)" >
                        <path d="m 303.87207,28.027344 50.36621,52.155761 C 339.74805,97.525391 331,119.88574 331,144.27588 c 0,20.84326 6.40527,40.26269 17.34766,56.3042 C 357.56543,214.06836 363,230.43164 363,248 c 0,46.22949 -37.34473,83.73633 -83.50977,83.99902 C 247.12109,332.02148 217.1582,341.61621 192,358.06055 166.81152,341.5957 136.80469,331.99805 104.39063,331.99805 58.279785,331.67285 21,294.19043 21,248 21,230.43262 26.43457,214.06836 35.652344,200.58008 46.594238,184.53857 53,165.11914 53,144.27588 53,119.88525 44.251953,97.525391 29.761719,80.183106 L 80.12793,28.027344 C 96.056641,37.936523 114.87402,43.669922 135,43.669922 c 21.02832,0 40.62988,-6.258789 57,-17 16.37012,10.741211 35.97168,17 57,17 20.12598,0 38.94336,-5.733399 54.87207,-15.642578 z M 249,31.669922 c 21.25488,0 40.83789,-7.217774 56.41211,-19.322266 l 65.40332,67.726563 C 353.70605,96.120117 343,118.94775 343,144.27588 c 0,18.35449 5.63184,35.42529 15.25781,49.5376 C 368.78906,209.22266 375,227.92773 375,248 c 0,52.83398 -42.67969,95.69922 -95.44141,95.99805 C 246.71582,344.00977 216.57617,354.6543 192,372.65039 167.41016,354.64551 137.25244,343.99805 104.39062,343.99805 51.651367,343.67187 9,300.81641 9,248 9,227.92773 15.210938,209.22266 25.742187,193.81348 35.368164,179.70117 41,162.63037 41,144.27588 41,118.94775 30.293457,96.120117 13.18457,80.074219 L 78.587891,12.347656 C 94.162109,24.452148 113.74512,31.669922 135,31.669922 c 21.52197,0 41.33105,-7.398926 57,-19.780273 15.66895,12.381347 35.47754,19.780273 57,19.780273 z" style="fill-rule:evenodd" />
                        <text font-family="monospace" font-weight="900" text-anchor="middle"></text>
                    </g>
                    <g transform="translate(0.49999999,0.49999999)" style="font-size:111.94029999px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px; text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Roadgeek 2005 Series E;">
                        <path d="m 294.76592,147.90112 c -7e-5,4.62689 -0.74634,8.88062 -2.23881,12.76119 -1.4926,3.80599 -3.58215,7.12688 -6.26865,9.96269 -2.68663,2.7612 -5.89558,4.92538 -9.62687,6.49254 -3.73139,1.56716 -7.79855,2.35074 -12.20149,2.35074 -4.40302,0 -8.47018,-0.78358 -12.2015,-2.35074 -3.65674,-1.56716 -6.82837,-3.73134 -9.51492,-6.49254 -2.68658,-2.83581 -4.77613,-6.1567 -6.26866,-9.96269 -1.49255,-3.88057 -2.23881,-8.1343 -2.2388,-12.76119 l 0,-44.77612 13.43283,0 0,44.77612 c -2e-5,2.23883 0.14923,4.06719 0.44776,5.48507 0.37311,1.34331 1.00744,2.76122 1.90299,4.25374 1.49251,2.4627 3.50743,4.44031 6.04477,5.93283 2.53728,1.49255 5.33579,2.23882 8.39553,2.23881 3.05966,1e-5 5.85816,-0.74626 8.39552,-2.23881 2.61189,-1.49252 4.66413,-3.47013 6.15672,-5.93283 0.89546,-1.49252 1.49248,-2.94774 1.79104,-4.36568 0.37308,-1.49251 0.55965,-3.28355 0.5597,-5.37313 l 0,-44.77612 13.43284,0 0,44.77612 0,0"/>
                        <path d="m 370.30813,156.29664 c -7e-5,7.61196 -3.50753,13.47016 -10.52239,17.57463 -2.61199,1.64179 -5.55975,2.91045 -8.84328,3.80597 -3.28363,0.82089 -6.67915,1.23134 -10.18657,1.23134 -6.49257,0 -12.23883,-1.15671 -17.23881,-3.47015 -4.92539,-2.38805 -9.51493,-6.04476 -13.76865,-10.97015 l 10.74626,-8.39552 c 2.83581,3.2836 5.82088,5.67166 8.95523,7.16418 3.1343,1.49255 6.82832,2.23882 11.08209,2.23881 4.77608,1e-5 8.69398,-0.89551 11.75373,-2.68657 3.05965,-1.86566 4.5895,-4.2164 4.58955,-7.05224 -5e-5,-2.98505 -1.56721,-5.26117 -4.70149,-6.82836 -1.34333,-0.52236 -2.76124,-1.04474 -4.25373,-1.56716 -1.41796,-0.52236 -2.98512,-0.97012 -4.7015,-1.34329 l -3.47014,-1.00746 -3.47015,-0.78358 -3.58209,-1.1194 c -3.88062,-0.89549 -6.94032,-1.86564 -9.17911,-2.91045 -2.16419,-1.11937 -4.02986,-2.57459 -5.59701,-4.36567 -1.56718,-1.71638 -2.76121,-3.65667 -3.58209,-5.8209 -0.74628,-2.16413 -1.11941,-4.44024 -1.11941,-6.82836 0,-3.13427 0.63432,-5.97009 1.90299,-8.50746 1.26864,-2.53725 3.02237,-4.70142 5.26119,-6.49254 2.23879,-1.8656 4.92536,-3.28351 8.05971,-4.25373 3.20892,-1.0447 6.71638,-1.56709 10.52238,-1.56716 5.59698,7e-5 10.6716,0.93291 15.22388,2.7985 4.62682,1.86575 8.84323,4.77619 12.64926,8.73135 l -9.96269,8.95522 c -4.70154,-4.92531 -10.67168,-7.388 -17.91045,-7.38806 -3.806,6e-5 -6.79107,0.70902 -8.95522,2.12687 -2.08958,1.34334 -3.13435,3.20901 -3.13433,5.59701 -2e-5,1.04483 0.18655,1.97767 0.5597,2.79851 0.37311,0.74632 1.00744,1.45527 1.90299,2.12687 0.89549,0.59706 2.08952,1.15676 3.58209,1.6791 1.56713,0.52244 3.50743,1.04482 5.82089,1.56716 4.99996,1.04483 9.17906,2.0896 12.53732,3.13433 3.35816,1.04482 6.08203,2.0896 8.17164,3.13433 3.35815,1.71646 6.0074,4.25377 7.94776,7.61194 1.94023,3.28361 2.91038,6.97764 2.91045,11.08209" />
                    </g>
                </svg>
            </symbol>
        </defs>
        <g id="groupMapAll">
            <g id="grpStates"></g>
            <g id="grpInterstates">
                <g></g>
            </g>
            <g id="grpInterstateNames">
                <g></g>
            </g>
        </g>
    </svg>
    </body>
</html>
<script>
    let gActiveState = null;
	let gStates			= {};
	let gGeoPath		= {};
	let gWidth			= 960,
		gHeight			= 600;
	function fxReset(sState) {
        var grpInterstates = d3.select("#grpInterstates");
		grpInterstates.selectAll('path').remove();
        var grpInterstateNames = d3.select("#grpInterstateNames");
		grpInterstateNames.selectAll('text').remove();
		grpInterstateNames.selectAll('use').remove();
    	gActiveState	= d3.select(null);
        var g = d3.select("#groupMapAll")
        g.transition()
		.duration(750)
		.style("stroke-width", "1.5px")
		.attr("transform", "");
	}
	function onMouseDown(obj){
		var sState		= gStates[obj.id];
		if (gActiveState && gActiveState.node() === obj){
			return fxReset(sState);
		} else if (gActiveState && gActiveState.node() && gActiveState.node().id != undefined){
			var tmpState = gStates[gActiveState.node().id];
            var grpInterstates = d3.select("#grpInterstates");
		    grpInterstates.selectAll('path').remove();
            var grpInterstateNames = d3.select("#grpInterstateNames");
		    grpInterstateNames.selectAll('text').remove();
    		grpInterstateNames.selectAll('use').remove();
		}
		var sStateFIP	= obj.id.substr(0,2);
		gActiveState = d3.select(obj);
		var bounds	= gGeoPath.bounds(obj),
		dx			= bounds[1][0] - bounds[0][0],
		dy			= bounds[1][1] - bounds[0][1],
		x			= (bounds[0][0] + bounds[1][0]) / 2,
		y			= (bounds[0][1] + bounds[1][1]) / 2,
		scale		= .9/ Math.max(dx / gWidth, dy / gHeight),
		translate	= [(gWidth/2) - (scale * x), (gHeight/2) - (scale * y)];
        displayInterstates(sStateFIP);
        displayInterstateLabels(sStateFIP);
        var g = d3.select("#groupMapAll");
		g.transition()
		.duration(750)
		.style("stroke-width", 1.5 / scale + "px")
		.attr("transform", "translate(" + translate + ")scale(" + scale + ")");
	}
    function displayAllRoads() {
        var grpInterstates = d3.select("#grpInterstates");
        var grpInterstateNames = d3.select("#grpInterstateNames");
        d3.json("us-roads-2017.json", function (error, usroads) {
            if (error) throw error;
            var p = d3.geoPath().projection(projection);
            grpInterstates.selectAll("g")
                .data(usroads.features)
                .enter()
                .filter(function (d) {
                    var s = d.properties.FULLNAME;
                    if (s.substr(0,1) == "I" /*|| s.substr(0,1) == "U"*/) {
                        return true;
                    }
                    return false;
			    })
                .append('path')
				.style("stroke", function(d) {
                    var s = d.properties.FULLNAME;
                    if (s.substr(0, 1) == "I") {
                        return '#003882';
                    } else {
                        return '#000000';
                    }
				})
                .attr('fill','none')
                .attr('stroke-width','.008em')
                .attr('stroke-opacity','1.0')
                .attr("d", p);
            /*for (var idx in usroads.features) {
                var mid_coords = {
                    lng: p.centroid(usroads.features[idx].geometry)[0] - ((idx % 2) == 0 ? 5 : .5),
                    lat: p.centroid(usroads.features[idx].geometry)[1] - ((idx % 2) == 0 ? 1 : 0.5)
                }
                if (usroads.features[idx].properties.FULLNAME.substr(0, 2) == "I-") {
                    var sInter = usroads.features[idx].properties.FULLNAME.substr(3);
                    if (sInter.length >= 3)
                        continue;
                    var ggg = grpInterstateNames.selectAll("g")
                        .append("use")
                        .attr("href", "#p1")
                        .attr("id", "use" + idx)
                        .attr("x", function (d) {
                            return mid_coords.lng;
                        })
                        .attr("y", function (d) {
                            return mid_coords.lat;
                        });
                    ggg.select("text")
                        .data([0])
                        .enter()
                        .append("text")
                        .attr("x", function (d) {
                            if (sInter.length == 1)
                                return parseFloat(ggg.attr("x")) + 5.8;
                            else
                                return parseFloat(ggg.attr("x")) + 4.9;
                        })
                        .attr("y", function (d) {
                            return parseFloat(ggg.attr("y")) + 4.9;
                        })
                        .text(function (d) {
                            if (sInter.length == 1) {
                                sInter = " " + sInter;
                            }
                            return sInter;
                        })
                        .attr('font-size', '3pt')
                        .attr('font-family', "'Droid Sans Mono', monospace")
                        .attr("fill", "rgb(255,255,255)");

                }
                if (usroads.features[idx].properties.FULLNAME.substr(0, 6) == "US Hwy") {
                    var sInter = usroads.features[idx].properties.FULLNAME.replace("US Hwy ", "");
                    var pos1 = sInter.indexOf(" ");
                    var pos2 = sInter.lastIndexOf(" ");
                    if (pos1 != pos2 || isNaN(sInter)) {
                        continue;
                    }
                    var usRoad = grpInterstateNames.selectAll("g")
                        .append("use")
                        .attr("href", "#p2")
                        .attr("x", function (d) {
                            return mid_coords.lng;
                        })
                        .attr("y", function (d) {
                            return mid_coords.lat;
                        });
                    usRoad.select("text")
                        .data([0])
                        .enter()
                        .append("text")
                        .attr("x", function (d) {
                            if (sInter.length == 1)
                                return parseFloat(usRoad.attr("x")) + 4.2;
                            else if (sInter.length == 2)
                                return parseFloat(usRoad.attr("x")) + 3.4;
                            else
                                return parseFloat(usRoad.attr("x")) + 2.8;
                        })
                        .attr("y", function (d) {
                            return parseFloat(usRoad.attr("y")) + 4.6;
                        })
                        .text(function (d) {
                            if (sInter.length == 1) {
                                sInter = " " + sInter;
                            }
                            return sInter;
                        })
                        .attr('font-size', '2pt')
                        .attr('font-family', "'Droid Sans Mono', monospace")
                        .attr("fill", "rgb(0,0,0)");
                }
            }*/
        });
    }
    function displayInterstates(sState) {
        var grpInterstates = d3.select("#grpInterstates");
		grpInterstates.selectAll('path').remove();
        d3.json(sState + "-interstate.json", function (error, usroads) {
            var interColors = {};
            if (error) throw error;
            var p = d3.geoPath().projection(projection);
            /*var colorScale = d3.scaleSequential(d3.interpolateCubehelixDefault)
                .domain([0, 1000])
            var lineFunction = d3.line()
                .x(function (d) { return projection(d)[0]; })
                .y(function (d) { return projection(d)[1]; })
                .curve(d3.curveLinear);
            */
            grpInterstates.selectAll("g")
            .data(usroads.features)
            .enter()
            .filter(function (d) {
                var s = d.properties.FULLNAME;
                if (s.substr(0,1) == "I" || s.substr(0,1) == "U") {
                    /*if (!(s in interColors)) {
                        interColors[s] = "#" + ((1 << 24) * Math.random() | 0).toString(16); 
                    }*/
                    return true;
                }
                return false;
			})
            .append('path')
			.style("stroke", function(d,i) {
                var s = d.properties.FULLNAME;
                if (s.substr(0, 1) == "I") {
                    return "#003882";//interColors[s];//colorScale(i);
                } else {
                    return 'rgb(0,0,0)';
                }
			})
            .attr('fill','none')
            .attr('stroke-width', function(d) {
                var s = d.properties.FULLNAME;
                if (s.substr(0, 1) == "I") {
                    if (s.substr(3).length <= 2) {
                        return '.012em';
                    } else {
                        return '.008em';
                    }
                } else {
                    return '.004em';
                }
            })
            .attr('stroke-opacity', function(d) {
                var s = d.properties.FULLNAME;
                if (s.substr(0, 1) == "I") {
                    if (s.substr(3).length <= 2) {
                        return '1';
                    } else {
                        return '.80';
                    }
                } else {
                    return '.60';
                }
            })
            .attr("d", p);
        });        
    }
    function displayInterstateLabels(sState) {
        var grpInterstateNames = d3.select("#grpInterstateNames");
		grpInterstateNames.selectAll('text').remove();
		grpInterstateNames.selectAll('use').remove();
        d3.json(sState + "-interstate-labels.json", function (error, data) {
            if (error) throw error;
            var p = d3.geoPath().projection(projection);
            for (var idx in data.features) {
                var mid_coords = {
                    lng: p.centroid(data.features[idx].geometry)[0] - ((idx % 2) == 0 ? 5 : .5),
                    lat: p.centroid(data.features[idx].geometry)[1] - ((idx % 2) == 0 ? 1 : 0.5)
                }
                if (data.features[idx].dx != 0) {
                    mid_coords.lng += parseFloat(data.features[idx].dx);
                }
                if (data.features[idx].dy != 0) {
                    mid_coords.lat += parseFloat(data.features[idx].dy);
                }
                if (data.features[idx].Road.substr(0, 2) == "I-") {
                    var sInter = data.features[idx].Road.substr(3);
                    if (sInter.length >= 3)
                        continue;
                    var ggg = grpInterstateNames.selectAll("g")
                        .append("use")
                        .attr("href", "#p1")
                        .attr("id", "use" + idx)
                        .attr("x", function (d) {
                            return mid_coords.lng;
                        })
                        .attr("y", function (d) {
                            return mid_coords.lat;
                        });
                    ggg.select("text")
                        .data([0])
                        .enter()
                        .append("text")
                        .attr("x", function (d) {
                            if (sInter.length == 1)
                                return parseFloat(ggg.attr("x")) + 5.8;
                            else
                                return parseFloat(ggg.attr("x")) + 4.9;
                        })
                        .attr("y", function (d) {
                            return parseFloat(ggg.attr("y")) + 4.9;
                        })
                        .text(function (d) {
                            if (sInter.length == 1) {
                                sInter = " " + sInter;
                            }
                            return sInter;
                        })
                        .attr('font-size', '3pt')
                        .attr('font-family', "'Droid Sans Mono', monospace")
                        .attr("fill", "rgb(255,255,255)");

                }
                /*if (data.features[idx].Road.substr(0, 6) == "US Hwy") {
                    var sInter = data.features[idx].Road.replace("US Hwy ", "");
                    var pos1 = sInter.indexOf(" ");
                    var pos2 = sInter.lastIndexOf(" ");
                    if (pos1 != pos2 || isNaN(sInter)) {
                        continue;
                    }
                    var usRoad = grpInterstateNames.selectAll("g")
                        .append("use")
                        .attr("href", "#p2")
                        .attr("x", function (d) {
                            return mid_coords.lng;
                        })
                        .attr("y", function (d) {
                            return mid_coords.lat;
                        });
                    usRoad.select("text")
                        .data([0])
                        .enter()
                        .append("text")
                        .attr("x", function (d) {
                            if (sInter.length == 1)
                                return parseFloat(usRoad.attr("x")) + 4.2;
                            else if (sInter.length == 2)
                                return parseFloat(usRoad.attr("x")) + 3.4;
                            else
                                return parseFloat(usRoad.attr("x")) + 2.8;
                        })
                        .attr("y", function (d) {
                            return parseFloat(usRoad.attr("y")) + 4.6;
                        })
                        .text(function (d) {
                            if (sInter.length == 1) {
                                sInter = " " + sInter;
                            }
                            return sInter;
                        })
                        .attr('font-size', '2pt')
                        .attr('font-family', "'Droid Sans Mono', monospace")
                        .attr("fill", "rgb(0,0,0)");
                }*/
            }
        });
    }
    gStates["01"] = "AL";
	gStates["02"] = "AK";
	gStates["05"] = "AR";
	gStates["04"] = "AZ";
	gStates["06"] = "CA";
	gStates["08"] = "CO";
	gStates["09"] = "CT";
	gStates["10"] = "DE";
	gStates["11"] = "DC";
	gStates["12"] = "FL";
	gStates["13"] = "GA";
	gStates["15"] = "HI";
	gStates["19"] = "IA";
	gStates["16"] = "ID";
	gStates["17"] = "IL";
	gStates["18"] = "IN";
	gStates["20"] = "KS";
	gStates["21"] = "KY";
	gStates["22"] = "LA";
	gStates["24"] = "MD";
	gStates["23"] = "ME";
	gStates["25"] = "MA";
	gStates["26"] = "MI";
	gStates["27"] = "MN";
	gStates["29"] = "MO";
	gStates["28"] = "MS";
	gStates["30"] = "MT";
	gStates["37"] = "NC";
	gStates["38"] = "ND";
	gStates["31"] = "NE";
	gStates["33"] = "NH";
	gStates["34"] = "NJ";
	gStates["35"] = "NM";
	gStates["32"] = "NV";
	gStates["36"] = "NY";
	gStates["39"] = "OH";
	gStates["40"] = "OK";
	gStates["41"] = "OR";
	gStates["42"] = "PA";
	gStates["44"] = "RI";
	gStates["45"] = "SC";
	gStates["46"] = "SD";
	gStates["47"] = "TN";
	gStates["48"] = "TX";
	gStates["49"] = "UT";
	gStates["51"] = "VA";
	gStates["50"] = "VT";
	gStates["53"] = "WA";
	gStates["55"] = "WI";
	gStates["54"] = "WV";
	gStates["56"] = "WY";

	var projection = d3.geoAlbersUsa();
	//d3 projection anticipates a 960 x 500
	var scale = d3.geoAlbersUsa().scale(); // get the default scale
	projection.scale(scale * 1.2)		// adjust for 600 pixels tall
	.translate([gWidth/2,gHeight/2]);		// adjust for 600 pixels tall here too.
    gGeoPath = d3.geoPath();//.projection(projection);


    var svg = d3.select("svg")
        .attr('width', gWidth)
        .attr('height', gHeight);

    var grpStates = d3.select("#grpStates");
    var grpInterstates = d3.select("#grpInterstates");
    var grpInterstateNames = d3.select("#grpInterstateNames");
    d3.json("us-states-10.json", function (error, us) {
    	if (error){
			alert(error);
		}
        grpStates.selectAll("g")
            .data(topojson.feature(us, us.objects.states).features)
            .enter()
            .append("path")
            .attr("d", gGeoPath)
            .attr("class", "state")
            .style("stroke", "#fff")
            .style("stroke-width", "1")
            .style("fill", function (d) {
                return "#"+((1<<24)*Math.random()|0).toString(16);
            })
            .style("fill-opacity", ".5")
            .on("mousedown", function (d) {
                onMouseDown(d, $("#US_" + gStates[d.id])[0]);
            });
    });
    //displayAllRoads();
</script>
